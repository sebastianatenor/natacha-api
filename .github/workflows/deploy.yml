name: "üöÄ Natacha CI/CD"

on:
  push:
    branches:
      - main
    paths:
      - "memory_console/**"
      - "core/**"
      - "app/**"
      - "Dockerfile"
      - "docker-compose.yml"
      - ".github/workflows/deploy.yml"
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    env:
      PROJECT_ID: asistente-sebastian
      REGION: us-central1
      # nombres REALMENTE presentes en tu repo local
      MEMORY_DIR: memory_console
      CORE_DIR: core
      API_DOCKERFILE: Dockerfile

    steps:
      - name: üß© Checkout repo
        uses: actions/checkout@v4

      - name: üîê Auth with Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}

      - name: üê≥ Setup Docker
        uses: docker/setup-buildx-action@v3

      - name: üß™ Test GCP secret (debug)
        run: |
          echo "üîç Probando si el secret GCP_SERVICE_ACCOUNT_KEY llega desde GitHub..."
          if [ -z "${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}" ]; then
            echo "‚ùå El secret GCP_SERVICE_ACCOUNT_KEY est√° VAC√çO o no est√° definido."
            exit 1
          else
            echo "‚úÖ El secret GCP_SERVICE_ACCOUNT_KEY est√° presente."
          fi

      # 1) memory_console (EXISTE)
      - name: "üèóÔ∏è Build & Push memory_console"
        run: |
          if [ -d "${{ env.MEMORY_DIR }}" ]; then
            echo "‚úÖ Encontrado ${{ env.MEMORY_DIR }} ‚Äî build..."
            docker build -t gcr.io/${{ env.PROJECT_ID }}/natacha-memory-console:latest -f ${{ env.MEMORY_DIR }}/Dockerfile .
            docker push gcr.io/${{ env.PROJECT_ID }}/natacha-memory-console:latest
          else
            echo "‚ö†Ô∏è No existe ${{ env.MEMORY_DIR }}, se salta este build."
          fi

      # 2) core (AHORA validamos que la carpeta se llame core)
      - name: "üèóÔ∏è Build & Push natacha_core"
        run: |
          if [ -d "${{ env.CORE_DIR }}" ]; then
            echo "‚úÖ Encontrado ${{ env.CORE_DIR }} ‚Äî build..."
            docker build -t gcr.io/${{ env.PROJECT_ID }}/natacha-core:latest -f ${{ env.CORE_DIR }}/Dockerfile .
            docker push gcr.io/${{ env.PROJECT_ID }}/natacha-core:latest
          else
            echo "‚ö†Ô∏è No existe la carpeta ${{ env.CORE_DIR }} (antes intent√°bamos 'natacha_core'). Se salta."
          fi

      # 3) API ra√≠z (tu Dockerfile del repo)
      - name: "üèóÔ∏è Build & Push API (Dockerfile ra√≠z)"
        run: |
          if [ -f "${{ env.API_DOCKERFILE }}" ]; then
            echo "‚úÖ Encontrado Dockerfile ra√≠z ‚Äî build..."
            docker build -t gcr.io/${{ env.PROJECT_ID }}/natacha-api:latest -f ${{ env.API_DOCKERFILE }} .
            docker push gcr.io/${{ env.PROJECT_ID }}/natacha-api:latest
          else
            echo "‚ùå No se encontr√≥ Dockerfile en el root."
            exit 1
          fi

      - name: "üöÄ Deploy to Cloud Run"
        run: |
          echo "Deploying to Cloud Run..."

          # 1) memory_console si existe imagen
          gcloud run deploy natacha-memory-console \
            --image gcr.io/${{ env.PROJECT_ID }}/natacha-memory-console:latest \
            --region ${{ env.REGION }} \
            --platform managed \
            --allow-unauthenticated || echo "‚ö†Ô∏è No se pudo desplegar memory_console (quiz√°s no existe)."

          # 2) core si existe imagen
          gcloud run deploy natacha-core \
            --image gcr.io/${{ env.PROJECT_ID }}/natacha-core:latest \
            --region ${{ env.REGION }} \
            --platform managed \
            --allow-unauthenticated || echo "‚ö†Ô∏è No se pudo desplegar core (quiz√°s no existe)."

          # 3) API ra√≠z
          gcloud run deploy natacha-api \
            --image gcr.io/${{ env.PROJECT_ID }}/natacha-api:latest \
            --region ${{ env.REGION }} \
            --platform managed \
            --allow-unauthenticated

      - name: "‚úÖ Health Check"
        run: |
          echo "Checking services..."
          curl -f https://natacha-api-${{ env.REGION }}.a.run.app/health || true


name: "üöÄ Natacha CI/CD"

on:
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  PROJECT_ID: asistente-sebastian
  REGION: us-central1
  AR_REPO: natacha-repo
  MEMORY_SERVICE: natacha-memory-console
  CORE_SERVICE: natacha-core
  API_SERVICE: natacha-api

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout
      - name: "üß© Checkout repo"
        uses: actions/checkout@v4
      - name: "üõë Fail if secret is empty"
        run: |
          if [ -z "${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}" ]; then
            echo "‚ùå GCP_SERVICE_ACCOUNT_KEY is empty. Set it in GitHub ‚Üí Settings ‚Üí Secrets ‚Üí Actions."
            exit 1
          fi

      # 2. Guardar secret como archivo JSON
      - name: "üîê Write GCP key from secret"
        run: |
          echo '${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}' > $HOME/gcp-key.json

      # 3. Autenticarse en Google Cloud
      - name: "üîê Auth with Google Cloud"
        uses: google-github-actions/auth@v2
        with:
          credentials_json: '${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}'

      # 4. Configurar gcloud
      - name: "‚öôÔ∏è Configure gcloud"
        run: |
          gcloud config set project $PROJECT_ID
          gcloud config set artifacts/location $REGION
          gcloud config set artifacts/repository $AR_REPO

      # 5. Configurar Docker para Artifact Registry
      - name: "üê≥ Auth Docker to Artifact Registry"
        run: |
          gcloud auth configure-docker ${REGION}-docker.pkg.dev --quiet

      # 6. Build & Push memory_console
      - name: "üèóÔ∏è Build & Push memory_console"
        run: |
          docker build -t ${REGION}-docker.pkg.dev/${PROJECT_ID}/${AR_REPO}/memory_console:latest \
            -f memory_console/Dockerfile \
            memory_console

          docker push ${REGION}-docker.pkg.dev/${PROJECT_ID}/${AR_REPO}/memory_console:latest

      # 7. Deploy to Cloud Run
      - name: "üöÄ Deploy memory_console"
        run: |
          gcloud run deploy $MEMORY_SERVICE \
            --image ${REGION}-docker.pkg.dev/${PROJECT_ID}/${AR_REPO}/memory_console:latest \
            --region $REGION \
            --platform managed \
            --allow-unauthenticated
